<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

use Magento\LiveSearchStorefrontPopover\Block\Frontend\SaaSContext;
use Magento\Search\Helper\Data;

// phpcs:disable Magento2.Templates.ThisInTemplate.FoundThis
?>
<?php
// This file is a modified copy of magento/module-search/view/frontend/templates/form.mini.phtml

/** @var $block SaaSContext */
/** @var $helper Data */
//phpcs:ignore
$helper = $this->helper(Data::class);
?>
<div class="block block-search">
    <div class="block block-title"><strong><?= $block->escapeHtml(__('Search')) ?></strong></div>
    <div class="block block-content">
        <form class="form minisearch" id="search_mini_form"
              action="<?= $block->escapeUrl($helper->getResultUrl()) ?>" method="get">
            <div class="field search">
                <label class="label" for="search" data-role="minisearch-label">
                    <span><?= $block->escapeHtml(__('Search')) ?></span>
                </label>
                <div class="control">
                    <input id="search"
                           type="text"
                           name="<?= $block->escapeHtmlAttr($helper->getQueryParamName()) ?>"
                           value="<?= /* @noEscape */ $helper->getEscapedQueryText() ?>"
                           placeholder="<?= $block->escapeHtmlAttr(__('Search entire store here...')) ?>"
                           class="input-text"
                           maxlength="<?= $block->escapeHtmlAttr($helper->getMaxQueryLength()) ?>"
                           role="combobox"
                           aria-haspopup="false"
                           aria-autocomplete="both"
                           autocomplete="off"
                           aria-expanded="false"
                           onchange=""
                           data-mage-init='{
                                "openSearch": {
                                    "formSelector": "#search_mini_form"
                                }
                           }'
                    />

                    <div id="search_autocomplete" class="search-autocomplete"></div>

                    <?= $block->getChildHtml() ?>
                </div>
            </div>
            <div class="actions">
                <button type="submit"
                        title="<?= $block->escapeHtml(__('Search')) ?>"
                        class="action search"
                        id="search"
                        aria-label="Search"
                >
                    <span><?= $block->escapeHtml(__('Search')) ?></span>
                </button>
                <button type="button"
                        title="<?= $block->escapeHtml(__('remove')) ?>"
                        class="action remove"
                        aria-label="Search"
                        id="close-search"
                >
                    <span><?= $block->escapeHtml(__('remove')) ?></span>
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    require([
            "dataServicesBase",
            "magentoStorefrontEvents",
            "livesearchautocomplete"
        ],
        function () {
            new window.LiveSearchAutocomplete({
                environmentId: "<?= $block->escapeJs($block->getEnvironmentId()); ?>",
                websiteCode: "<?= $block->escapeJs($block->getWebsiteCode()); ?>",
                storeCode: "<?= $block->escapeJs($block->getStoreCode()); ?>",
                storeViewCode: "<?= $block->escapeJs($block->getStoreViewCode()); ?>",
                config: {
                    pageSize: "<?= $block->escapeJs($block->getAutocompleteLimit()); ?>",
                    minQueryLength: "<?= $block->escapeJs($helper->getMinQueryLength()); ?>",
                    currencySymbol: " <?= $block->escapeJs($block->getCurrencySymbol()); ?>",
                    displayOutOfStock: "<?= $block->escapeJs($block->isDisplayOutOfStock()); ?>"
                },
                context: {
                    customerGroup: "<?= $block->escapeJs($block->getCustomerGroupCode()) ?>"
                }
            });
        })
</script>

<script>
    require(['magentoStorefrontEvents'], function (magentoStorefrontEvents) {
        if (!magentoStorefrontEvents) return;

        magentoStorefrontEvents.context.setSearchExtension({
            version: "<?= $block->escapeHtmlAttr($block->getModuleVersion()); ?>"
        });
    });
</script>
